# Bajo paths definimos las rutas
# Recordar que en app.js para Users tenemos agregado el prefijo /api/users)
paths:

  /api/users:
    # En cada una agregamos los métodos habilitados
    # Este es el método get que no recibe parámetros para retornar todos los usuarios
    get:
      summary: 'Retorna todos los usuarios disponibles en la DB'
      # Este título encabezará la lista
      tags:
        - Users
      # Es importante agregar esta sección de códigos de respuesta
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  # Esta línea hace referencia al esquema de User (tomado desde el modelo de Mongoose)
                  # Se puede ver el esquema indicado más abajo, en components
                  $ref: '#/components/schemas/User'
        "500":
          description: 'ERROR general'


components:
  schemas:
    # Este esquema se coloca por separado, para poder referenciarlo en distintos
    # endpoints arriba
    User:
      type: object
      properties:
        _id:
          type: objectId
          description: 'ID MongoDB'
        first_name:
          type: string
          description: 'Nombre'
        last_name:
          type: string
          description: 'Apellido'
        email:
          type: string
          description: 'Email'
        password:
          type: string
          description: 'Clave hasheada'
        role:
          type: string
          description: 'Rol de usuario'
        cart:
          type: objectId
          description: 'ID MongoDB ref a Cart asociado al UserId'

      # Siempre es útil un ejemplo, también pueden colocarse ejemplos específicos por endpoint arriba
      example:
        _id: 668ae8fb0670e40beb2bf238
        first_name: Jean
        last_name: Perez
        email: rantaro5000@gmail.com
        password: $2a$12$G4KJiLZMsSZ.DXfxZryUWuS2Tr4ZrPwU0Z4T9pPT0B7P7E1C3EUPC,
        role: user
        cart: 668ae8fb0670e40beb2bf23a
  
  # Cuál es la diferencia entre schemas y requestBodies?
  # schemas permite indicar esquemas completos, requestBodies indica los campos
  # que debería adjuntar una determinada solicitud (en este caso updateUser)
  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
          description: Clave TEXTO PLANO